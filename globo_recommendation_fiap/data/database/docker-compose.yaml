services:
  db:
    image: postgres
    container_name: ${DB_CONTAINER_NAME}
    hostname: ${HOSTNAME_SERVER}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
        - postgres_db:/var/lib/postgresql/data
    networks:
      - app_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: ${PG_CONTAINER_NAME}
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "16543:80"
    depends_on:
      - db
    networks:
      - app_network
    volumes:
      - postgres_pg:/var/lib/pgadmin

  recommender:
    image: recommender:dqur3t7mtsbsyhgo  # Your BentoML containerized API
    container_name: ${APP_CONTAINER_NAME}
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PG_PORT=5432
      - HOSTNAME_SERVER=${DB_CONTAINER_NAME}  # Ensuring it matches PostgreSQL container
    ports:
      - "3000:3000"  # Expose BentoML API
    depends_on:
      - db
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_db:
    external: false
  postgres_pg:
    external: false

